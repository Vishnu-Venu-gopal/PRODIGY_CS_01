# -*- coding: utf-8 -*-
"""PRODIGY_CS_01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LoA0PVSWygiytVL9kOqD7xgeXZzv0bSH
"""

def caesar_cipher_encrypt(text, shift):
    encrypted_text = ""
    for char in text:
        if char.isalpha():
            shift_base = 65 if char.isupper() else 97
            encrypted_text += chr((ord(char) - shift_base + shift) % 26 + shift_base)
        else:
            encrypted_text += char
    return encrypted_text

def caesar_cipher_decrypt(text, shift):
    return caesar_cipher_encrypt(text, -shift)

def main():
    while True:
        operation = input("Do you want to (e)Encrypt or (d)Decrypt the message? Enter 'e' or 'd': ").lower()
        if operation not in ['e', 'd']:
            print("Invalid operation. Please enter 'e' for encryption or 'd' for decryption.")
            continue

        message = input("Enter the message: ")
        try:
            shift = int(input("Enter the shift value: "))
        except ValueError:
            print("Invalid shift value. Please enter an integer.")
            continue

        if operation == 'e':
            result = caesar_cipher_encrypt(message, shift)
        else:
            result = caesar_cipher_decrypt(message, shift)

        print(f"The resulting message is: {result}")

        another = input("Do you want to perform another operation? (yes/no): ").lower()
        if another != 'yes':
            break

if __name__ == "__main__":
    main()